#version 330 core

// Указание, что входящие примитивы — это треугольники (3 вершины).
layout (triangles) in;

// Указание, что выходящий примитив — это треугольная полоса (triangle strip), максимальное количество вершин для
// одного примитива — 18.
layout (triangle_strip, max_vertices=18) out;

// Массив матриц теневой проекции для каждой из 6 граней кубической тени
uniform mat4 shadowMatrices[6];

// Выходная переменная, представляющая позицию фрагмента для каждой вершины
out vec4 FragPos;

void main()
{
    // Перебираем все 6 граней куба, на которые будем проецировать тени
    for(int face = 0; face < 6; ++face)
    {
        // Устанавливаем номер текущей грани для записи в соответствующий слой
        gl_Layer = face; // Встроенная переменная, которая указывает, на какой слой рендерится текущая грань.

        // Для каждой вершины треугольника
        for(int i = 0; i < 3; ++i)
        {
            // Присваиваем позицию вершины из входящих данных шейдера
            FragPos = gl_in[i].gl_Position;

            // Применяем матрицу проекции для текущей грани, чтобы преобразовать координаты вершины в систему координат
            // соответствующей грани
            gl_Position = shadowMatrices[face] * FragPos;

            // Отправляем вершину в выходной поток
            EmitVertex();
        }

        // Завершаем примитив (треугольник), переходя к следующему
        EndPrimitive();
    }
}
